// Grid Layout with modern CSS Grid
.container {
  display: grid;
  height: 100vh;
  width: 100vw;
  gap: 0; // Modern syntax instead of grid-gap
  place-items: center; // Shorthand for justify-items and align-items
  contain: layout style; // CSS containment for performance
}

// Mobile-first approach
.container {
  grid-template-columns: var(--spacing-xlarge) 1fr var(--spacing-xlarge);
  grid-template-rows: var(--spacing-xlarge) 1fr 2fr 1fr var(--spacing-xlarge);
}

#clock {
  grid-column: 2;
  grid-row: 3;
}

#switch {
  grid-column: 2;
  grid-row: 4;
  
  .single-switch {
    display: inline-flex;
    margin-inline-end: var(--spacing-large); // Logical property
    margin-block-end: 0;
    
    &:last-child {
      margin-inline-end: 0;
    }
  }
}

// Desktop layout
@media (min-width: 551px) {
  .container {
    grid-template-columns: var(--spacing-xlarge) 1fr auto var(--spacing-xlarge);
    grid-template-rows: var(--spacing-xlarge) 1fr var(--spacing-xlarge);
  }
  
  #clock {
    grid-row: 2;
  }
  
  #switch {
    grid-column: 3;
    grid-row: 2;
    
    .single-switch {
      display: flex;
      margin-inline-end: 0;
      margin-block-end: var(--spacing-large);
      
      &:last-child {
        margin-block-end: 0;
      }
    }
  }
}
